{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode1","htmlFor","TextForm","_text$match","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","handleCapital","arr","split","i","length","charAt","slice","newtet","join","handleCopy","console","log","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","match","filter","para","trim","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","role","word","lower","capitalize","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.895b86c9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n       aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n    \r\n          </li> */}\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-Danger\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode1} id=\"flexSwitchCheckDefault1\"/>\r\n  {/* <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode2} id=\"flexSwitchCheckDefault2\"  style={{ marginLeft: '20px' }}/> */}\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string,\r\n}; \r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About \"\r\n  };\r\n  ","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\")\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n    //    console.log(\"On Change\");\r\n       setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text=\"new text\";//wrong way\r\n    // setText(\"new text\");//right way\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n      }\r\n      const handleCapital = () =>{\r\n        const arr = text.split(\" \")\r\n        for(var i =0;i<arr.length;i++){\r\n          arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1)\r\n          props.showAlert(\"Text Capitalised\", \"success\")\r\n        }\r\n  \r\n        const newtet = arr.join(\" \")\r\n        setText(newtet)\r\n      }\r\n      const handleCopy=()=>{\r\n        console.log(\"I am copy\");\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard\", \"success\")\r\n      }\r\n      const handleExtraSpaces=()=>{\r\n        let newText =text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces handled\", \"success\")\r\n      }\r\n  return (\r\n    <>\r\n    <div  className=\"container\" style={{color:props.mode==='dark'?'white':'#1b3150'}}>\r\n        <h1>{props.heading}</h1>\r\n  <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'#1b3150'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary mx-2' onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className='btn btn-primary mx-2' onClick={handleLoClick}>Convert toLowercase</button>\r\n    <button className='btn btn-primary mx-2' onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={speak}>Speak</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCapital}>Capitalise</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>Copy</button>\r\n    <button className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n         <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#1b3150'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length}Minutes to read</p>\r\n            <p>{text.match(/[^.!?]+[.!?]+[\\s]*/g)?.length || 0} sentences</p>\r\n            <p>{text.split(/\\n\\n+/).filter(para => para.trim() !== \"\").length} paragraphs</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to preview\"}</p>\r\n         </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n    const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n      props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n     </div>\r\n   \r\n  )\r\n}\r\nexport default Alert","\r\nimport './App.css';\r\n// import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\nimport React, {useState} from 'react';\r\n// import { Routes, Route , BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode]=useState('light');\r\n   const [alert, setAlert]=useState(null);\r\n   const showAlert=(message, type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type: type\r\n    })\r\n    setTimeout(()=>{\r\n      setAlert(null);\r\n    },3000);\r\n   }\r\n  const toggleMode1 = ()=>{\r\n    if(mode=== 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#1b3150';\r\n      showAlert(\"Dark mode has been enabled\", \"success\")\r\n      document.title='Word Master-Dark Mode'\r\n    //   setInterval(()=>{\r\n    //     document.title='Word Master is Amazing Mode';\r\n    //    },2000);\r\n    //    setInterval(()=>{\r\n    //    document.title='Install Word Now';\r\n    // }, 1500);\r\n    }\r\n  else{\r\n    setMode('light');\r\n    document.body.style.backgroundColor='white';\r\n    showAlert(\"Light mode has been enabled\", \"success\")\r\n    document.title='Word Master-Light Mode'\r\n  }\r\n  }\r\n  // const toggleMode2 = ()=>{\r\n  //   if(mode=== 'light'){\r\n  //     setMode('dark');\r\n  //     document.body.style.backgroundColor='#1b3150';\r\n  //     showAlert(\"Dark mode has been enabled\", \"success\")\r\n  //     document.title='Word Master-Dark Mode'\r\n  //   }\r\n  // else{\r\n  //   setMode('light');\r\n  //   document.body.style.backgroundColor='white';\r\n  //   showAlert(\"Light mode has been enabled\", \"success\")\r\n  //    document.title='Word Master-Light Mode'\r\n  //  }\r\n  // }\r\n  return (\r\n    <>\r\n    {/* <BrowserRouter> */}\r\n    \r\n{/* <Navbar title=\"FirstApp\" aboutText=\"About First App\"/> */}\r\n{/* <Navbar/> */}\r\n<Navbar title=\"Word Master\" mode={mode} toggleMode1={toggleMode1} /*toggleMode2={toggleMode2}*//>\r\n<Alert alert={alert}/>\r\n<div className=\"container my-3\" mode={mode}>\r\n{/* <Routes> */}\r\n          {/* <Route path=\"/about\" element={<About/>}/>\r\n          </Routes> \r\n          <Routes> */}\r\n          {/* <Route path=\"/\" */}\r\n          {<TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode}/>}\r\n        {/* /> */}\r\n        {/* </Routes> */}\r\n       \r\n</div>\r\n{/* </BrowserRouter> */}\r\n    </>\r\n\r\n );\r\n}\r\n\r\nexport default App; \r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}