{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","Navbar","Link","to","title","aria-label","aria-current","aboutText","onClick","toggleMode1","htmlFor","TextForm","_text$match","text","setText","useState","Fragment","heading","value","onChange","event","target","rows","handleUpClick","newText","toUpperCase","showAlert","handleLoClick","toLowerCase","handleClearClick","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","handleCapital","arr","split","i","length","charAt","slice","newtet","join","handleCopy","console","log","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpaces","filter","element","match","para","trim","prototype","PropTypes","string","isRequired","defaultProps","Alert","height","alert","role","word","lower","capitalize","App","setMode","setAlert","message","setTimeout","BrowserRouter","body","Routes","Route","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.74647d14.chunk.js","sourcesContent":["\r\nimport React, {useState} from 'react'\r\nexport default function About(props) {\r\n    // const[myStyle, setMyStyle]=useState({\r\n    //     color:'black ',\r\n    //     backgroundColor: 'white'\r\n    // })\r\n    let myStyle={\r\n      color:props.mode==='dark'?'white':'#042743',\r\n      backgroundColor: props.mode==='dark'?'rgb(36 74 104':'white',\r\n    }\r\n  return (\r\n    <div className='container' style={myStyle}>\r\n        <h1 className='my-3' style={{color:props.mode==='dark'?'white':'#042743'}}>About us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Analyse Your Text\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n       Word Master gives you a way to utilize your text quickly and efficiently. Be it word count, \r\n          ccharacter count or calculte time to read it.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Free to use\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n       Word Master is a free character counter tool thet provides instant charcter count and word count statitics for a given text. Word Master reports\r\n           the number of words and characters. This is suitable for writing text with word/ character limit.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Browser Compatible\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n       This word counter software works in any web browsers such as chrome, Firefox, Internet Explorer,\r\n        safari, Opera. It suits to count charcter in facebook, blog ,books, excel document, pdf document,esaays, etc.\r\n      </div> \r\n     \r\n    </div>\r\n</div>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n       aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n    \r\n          </li>\r\n        </ul>\r\n        {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-Danger\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode1} id=\"flexSwitchCheckDefault1\"/>\r\n  {/* <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode2} id=\"flexSwitchCheckDefault2\"  style={{ marginLeft: '20px' }}/> */}\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n\r\n      </div>\r\n    </div>\r\n  </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype={\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string,\r\n}; \r\n\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About \"\r\n  };\r\n  ","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase\", \"success\")\r\n    }\r\n    const handleLoClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\")\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\")\r\n    }\r\n    const handleOnChange=(event)=>{\r\n    //    console.log(\"On Change\");\r\n       setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('');\r\n    // text=\"new text\";//wrong way\r\n    // setText(\"new text\");//right way\r\n    const speak = () => {\r\n        let msg = new SpeechSynthesisUtterance();\r\n        msg.text = text;\r\n        window.speechSynthesis.speak(msg);\r\n      }\r\n      const handleCapital = () =>{\r\n        const arr = text.split(\" \")\r\n        for(var i =0;i<arr.length;i++){\r\n          arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1)\r\n          props.showAlert(\"Text Capitalised\", \"success\")\r\n        }\r\n  \r\n        const newtet = arr.join(\" \")\r\n        setText(newtet)\r\n      }\r\n      const handleCopy=()=>{\r\n        console.log(\"I am copy\");\r\n        var text=document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard\", \"success\")\r\n      }\r\n      const handleExtraSpaces=()=>{\r\n        let newText =text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces handled\", \"success\")\r\n      }\r\n  return (\r\n    <>\r\n    <div  className=\"container\" style={{color:props.mode==='dark'?'white':'#1b3150'}}>\r\n        <h1>{props.heading}</h1>\r\n  <div className=\"mb-3\">\r\n    <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white',color:props.mode==='dark'?'white':'#1b3150'}} id=\"myBox\" rows=\"8\"></textarea>\r\n    </div>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleLoClick}>Convert toLowercase</button>\r\n    <button className='btn btn-primary mx-1 my-1' onClick={handleClearClick}>Clear Text</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={speak}>Speak</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCapital}>Capitalise</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy</button>\r\n    <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n         <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'#1b3150'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\".\").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length}Minutes to read</p>\r\n            <p>{text.match(/[^.!?]+[.!?]+[\\s]*/g)?.length || 0} sentences</p>\r\n            <p>{text.split(/\\n\\n+/).filter(para => para.trim() !== \"\").length} paragraphs</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to preview\"}</p>\r\n         </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n    const capitalize=(word)=>{\r\n    const lower=word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n    return (\r\n      <div style={{height: '50px'}}>\r\n      {props.alert&&<div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n     </div>}\r\n     </div>\r\n  )\r\n}\r\nexport default Alert","\r\nimport './App.css';\r\nimport About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport Alert from './components/Alert';\r\nimport React, {useState} from 'react';\r\nimport { Routes, Route , BrowserRouter} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode]=useState('light');\r\n   const [alert, setAlert]=useState(null);\r\n   const showAlert=(message, type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type: type\r\n    })\r\n    setTimeout(()=>{\r\n      setAlert(null);\r\n    },3000);\r\n   }\r\n  const toggleMode1 = ()=>{\r\n    if(mode=== 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor='#1b3150';\r\n      showAlert(\"Dark mode has been enabled\", \"success\")\r\n      document.title='Word Master-Dark Mode'\r\n    //   setInterval(()=>{\r\n    //     document.title='Word Master is Amazing Mode';\r\n    //    },2000);\r\n    //    setInterval(()=>{\r\n    //    document.title='Install Word Now';\r\n    // }, 1500);\r\n    }\r\n  else{\r\n    setMode('light');\r\n    document.body.style.backgroundColor='white';\r\n    showAlert(\"Light mode has been enabled\", \"success\")\r\n    document.title='Word Master-Light Mode'\r\n  }\r\n  }\r\n  // const toggleMode2 = ()=>{\r\n  //   if(mode=== 'light'){\r\n  //     setMode('dark');\r\n  //     document.body.style.backgroundColor='#1b3150';\r\n  //     showAlert(\"Dark mode has been enabled\", \"success\")\r\n  //     document.title='Word Master-Dark Mode'\r\n  //   }\r\n  // else{\r\n  //   setMode('light');\r\n  //   document.body.style.backgroundColor='white';\r\n  //   showAlert(\"Light mode has been enabled\", \"success\")\r\n  //    document.title='Word Master-Light Mode'\r\n  //  }\r\n  // }\r\n  return (\r\n    <>\r\n    <BrowserRouter>\r\n    \r\n{/* <Navbar title=\"FirstApp\" aboutText=\"About First App\"/> */}\r\n{/* <Navbar/> */}\r\n<Navbar title=\"Word Master\" mode={mode} toggleMode1={toggleMode1} /*toggleMode2={toggleMode2}*//>\r\n<Alert alert={alert}/>\r\n<div className=\"container my-3\" mode={mode}>\r\n<Routes>\r\n\r\n          <Route path=\"/about\" element={<About mode={mode}/>} />\r\n          </Routes> \r\n          <Routes>\r\n          <Route path=\"/\"\r\n          element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode}/>}\r\n        />\r\n        </Routes>\r\n       \r\n</div>\r\n</BrowserRouter>\r\n    </> \r\n\r\n );\r\n}\r\n\r\nexport default App; \r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}